#!/usr/bin/env bash

set -eo pipefail

function prune:test {
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        cat <<-'USAGE'
Description:
    Prune all test docker containers and volumes

Usage:
    ./run prune:test [options]

Options:
    OPTION                  See https://docs.docker.com/engine/reference/commandline/container_prune/#options for all possible options
    -h | --help             Display function usage information

Examples:
    # Prune all test docker containers and volumes
    ./run prune:test
USAGE
        exit 0
    fi

    TEST=$(docker ps --filter "name=fa-test" -aq)

    if [ -z "$TEST" ]; then
        echo "No test containers/volumes to prune ..."
    else
        echo "Removing test containers/volumes..."
        docker container rm -f $TEST
        docker volumes rm $TEST
    fi
}

function test {


    # until curl -s -f -o /dev/null "http://localhost:9011"
    # do
    #     sleep 1
    # done
    VOLUMES=$(docker volume ls -q --filter "name=fusion_auth")
    docker-compose down
    docker-compose rm -f

    if [ -z "$VOLUMES" ]; then
        echo "No test containers/volumes to prune ..."
    else
        docker volume rm $VOLUMES
    fi

    docker-compose up -d
    echo "Checking to see if Kickstart has finished"
    COUNT=0
    echo -n "Waiting for Kickstart "
    until  docker logs fa-test-fusionauth 2>&1 | grep -q "Created API key ending in" ||  [ $COUNT == 60 ] ; do
        COUNT=$(( COUNT + 1 ))
        echo -n "."
        sleep 1
    done
    echo " Kickstart has finished"

    echo "FusionAuth is healthy. Executing tests ..."
    mix test "${@}"
    docker-compose down
}

function clean {
    VOLUMES=$(docker volume ls -q --filter "name=fusion_auth")
    docker-compose down
    docker-compose rm -f

    if [ -z "$VOLUMES" ]; then
        echo "No test containers/volumes to prune ..."
    else
        docker volume rm $VOLUMES
    fi

    docker-compose "${@}"
}

function help {
    printf "%s <task> [args]\n\nTasks:\n" "${0}"
    compgen -A function | grep -v "^_" | cat -n
    printf "\nExtended help:\n  Each task has comments for general usage\n"
}

# This idea is heavily inspired by: https://github.com/adriancooney/Taskfile
TIMEFORMAT=$'\nTask completed in %3lR'
time "${@:-help}"
